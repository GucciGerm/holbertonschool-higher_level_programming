>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided('str', 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(' ', 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[4], [4, 4], [4, 4, 4]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[4, 4], [4, 4, 4], [4, 4, 4]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[None], [4, 4, 4], [4, 4, 4]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[4, 4, 4], [4, 4, 4], [4, 4, 4]], 'str')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
